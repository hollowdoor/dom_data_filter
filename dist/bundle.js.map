{"version":3,"file":"bundle.js","sources":["../src/index.js"],"sourcesContent":["import { charTreeMixin } from 'char-tree';\nimport getElement from 'dom-get-element';\nimport { toggleMixin } from 'dom-toggle-mixin';\n\nexport class DataFilter {\n    constructor(element, {\n        value = '',\n        display = 'block',\n        read = null,\n        toggle = null,\n        autoToggle = true,\n        render = function(v){ return v + ''; }\n    } = {}){\n\n        this.element = getElement(element);\n        this.value = value;\n        this.autoToggle = autoToggle;\n        this.initCharTree();\n        this.initToggle({display, toggle});\n\n        if(autoToggle){\n            this.toggleDisplay(this.element.children.length);\n        }\n\n        if(typeof read === 'function'){\n            this._read = function(){\n                return Promise.resolve(read.call(this));\n            };\n        }else{\n            this._read = function(){\n                return Promise.resolve();\n            };\n        }\n\n        if(typeof render !== 'function'){\n            throw new TypeError(render + ' is not a function.');\n        }\n\n        this._render = render;\n    }\n    update(value){\n        return this._read().then(()=>{\n            const el = this.element;\n            const found = this.findAll(value);\n            this.value = value;\n\n            el.innerHTML = '';\n            found.forEach(data=>{\n                let html = this._render(data);\n                el.insertAdjacentHTML(\n                    'beforeend',\n                    html\n                );\n            });\n\n            if(this.autoToggle)\n                return this.toggle(found.length).then(()=>found);\n            return found;\n        });\n    }\n    readNext(value, sep){\n        return this.update(value)\n        .then(found=>{\n            return this.nextPhrase(value, sep)\n            .then(val=>(this.value = val));\n        });\n    }\n}\n\ncharTreeMixin(DataFilter.prototype);\ntoggleMixin(DataFilter.prototype);\n"],"names":["this","charTreeMixin","toggleMixin"],"mappings":";;;;;;;;;;AAIO,IAAM,UAAU,GAAC,mBACT,CAAC,OAAO,EAAE,GAAA,CAOd;6BAAN,GAAG,EAAE,CANM;2DAAA,EAAE,CACA;mEAAA,OAAO,CACV;uDAAA,IAAI,CACF;+DAAA,IAAI,CACA;+EAAA,IAAI,CACR;+DAAA,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;;;IAG1C,IAAQ,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;IACvC,IAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,IAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,IAAQ,CAAC,YAAY,EAAE,CAAC;IACxB,IAAQ,CAAC,UAAU,CAAC,CAAC,SAAA,OAAO,EAAE,QAAA,MAAM,CAAC,CAAC,CAAC;;IAEvC,GAAO,UAAU,CAAC;QACd,IAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACpD;;IAEL,GAAO,OAAO,IAAI,KAAK,UAAU,CAAC;QAC9B,IAAQ,CAAC,KAAK,GAAG,UAAU;YACvB,OAAW,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC3C,CAAC;KACL,IAAI;QACL,IAAQ,CAAC,KAAK,GAAG,UAAU;YACvB,OAAW,OAAO,CAAC,OAAO,EAAE,CAAC;SAC5B,CAAC;KACL;;IAEL,GAAO,OAAO,MAAM,KAAK,UAAU,CAAC;QAChC,MAAU,IAAI,SAAS,CAAC,MAAM,GAAG,qBAAqB,CAAC,CAAC;KACvD;;IAEL,IAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;CACzB,CAAA;AACL,qBAAI,MAAM,oBAAC,KAAK,CAAC;;;IACb,OAAW,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,WAAE;QAC3B,IAAU,EAAE,GAAGA,MAAI,CAAC,OAAO,CAAC;QAC5B,IAAU,KAAK,GAAGA,MAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,MAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEvB,EAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,KAAS,CAAC,OAAO,CAAC,UAAA,IAAI,CAAA;YAClB,IAAQ,IAAI,GAAGA,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAClC,EAAM,CAAC,kBAAkB;gBACrB,WAAe;gBACf,IAAQ;aACP,CAAC;SACL,CAAC,CAAC;;QAEP,GAAOA,MAAI,CAAC,UAAU;YAClB,EAAI,OAAOA,MAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAE,SAAE,KAAK,GAAA,CAAC,CAAC,EAAA;QACzD,OAAW,KAAK,CAAC;KAChB,CAAC,CAAC;CACN,CAAA;AACL,qBAAI,QAAQ,sBAAC,KAAK,EAAE,GAAG,CAAC;;;IACpB,OAAW,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KACxB,IAAI,CAAC,UAAA,KAAK,CAAA;QACX,OAAWA,MAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC;SACjC,IAAI,CAAC,UAAA,GAAG,CAAA,UAAGA,MAAI,CAAC,KAAK,GAAG,GAAG,IAAC,CAAC,CAAC;KAClC,CAAC,CAAC;CACN,CAAA;;AAGLC,sBAAa,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACpCC,0BAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;;;;"}